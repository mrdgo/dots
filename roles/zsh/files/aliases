# vim life
alias v="nvim"

# Convenience
alias i="devour sxiv -rfb"
alias d="devour display"
alias vlc="cvlc --key-quit q"
alias minecraft="JAVA_HOME=/usr/lib/jvm/java-17-openjdk/ devour ~/.minecraft/launcher/minecraft-launcher"

# youtube-dl
alias yta-aac="youtube-dl --extract-audio --audio-format aac "
alias yta-best="youtube-dl --extract-audio --audio-format best "
alias yta-flac="youtube-dl --extract-audio --audio-format flac "
alias yta-m4a="youtube-dl --extract-audio --audio-format m4a "
alias yta-mp3="youtube-dl --extract-audio --audio-format mp3 "
alias yta-opus="youtube-dl --extract-audio --audio-format opus "
alias yta-vorbis="youtube-dl --extract-audio --audio-format vorbis "
alias yta-wav="youtube-dl --extract-audio --audio-format wav "
alias ytv-best="youtube-dl -f bestvideo+bestaudio "

# Dev
alias g="git"
alias lg="lazygit"
alias tmux="TERM=xterm-256color tmux -f ~/.config/tmux.conf"
alias dk="lazydocker"

#alias ..="cd .." # bash legacy
alias ...="cd ../.."
alias .3="cd ../../.."
alias .4="cd ../../../.."
alias .5="cd ../../../../.."

# pretty ls
alias exac='exa --icons --group-directories-first'
alias ls='exac'
alias ll='exac -alF'
alias la='exac -a'
alias l='exac -F'
alias lx='exac -lbhHma@ --time-style=default --color-scale'
alias lall='exac -lbhHigUmuSa --time-style=long-iso'  # all list

# speciality views
alias lS='exa -1'			              # one column, just names
alias lt='exac --tree --level=2'    # tree

alias de='setxkbmap de'
alias us='setxkbmap us -variant intl'
alias dv='setxkbmap us -variant dvorak-intl'

alias x='$(xplr)'
alias p='paru'
alias psc='paru -Sc --noconfirm'
alias dk="lazydocker"

set_bg ()
{
    base="$HOME/.config/alacritty/alacritty_base.yml"
    res="$HOME/.config/alacritty/alacritty.yml"
    cat $base $HOME/.config/alacritty/gruvbox_$1.yml > $res
}


### ARCHIVE EXTRACTION
# usage: ex <file>
ex ()
{
    if [ -f $1  ] ; then
        case $1 in
            *.tar.bz2)   tar xjf $1   ;;
            *.tar.gz)    tar xzf $1   ;;
            *.bz2)       bunzip2 $1   ;;
            *.rar)       unrar x $1   ;;
            *.gz)        gunzip $1    ;;
            *.tar)       tar xf $1    ;;
            *.tbz2)      tar xjf $1   ;;
            *.tgz)       tar xzf $1   ;;
            *.zip)       unzip $1     ;;
            *.Z)         uncompress $1;;
            *.7z)        7z x $1      ;;
            *.deb)       ar x $1      ;;
            *.tar.xz)    tar xf $1    ;;
            *.tar.zst)   unzstd $1    ;;
            *)           echo "'$1' cannot be extracted via ex()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

tryb () {
    sess=tryb
    tmux new-session -d -s $sess -c ~/tryb

    # create windows
    tmux rename-window -t $sess:0 dev
    tmux neww -t $sess:1 -n docker -c ~/tryb/docker
    tmux neww -t $sess:2 -n git    -c ~/tryb

    tmux send-keys -t $sess:1 "docker compose start" C-m
    tmux send-keys -t $sess:2 "lazygit" C-m

    tmux select-window -t $sess:0 \; attach -t $sess
}




lsgrok() {
  url=$(curl http://localhost:4040/api/tunnels 2>/dev/null | jq -r '.tunnels[0].public_url')

  if [ "$url" = "" ] || [ "$url" = "null" ]; then
   echo No tunnels running?
  else
   host=$(echo "$url" | cut -d / -f 3 | cut -d : -f 1)
   port=$(echo "$url" | cut -d / -f 3 | cut -d : -f 2)

   echo ssh -p "$port" "$(whoami)"@"$host"
  fi
}

ngrok_init() {
  sess=ngrok
  tmux new-session -s $sess -d
  tmux send -t $sess:0 "ngrok tcp --region=eu 22" ENTER
  tmux neww -t $sess:1
  tmux send -t $sess:1 "ngrok tcp --region=eu 4200" ENTER
}

alias myip="wget -qO- https://ipecho.net/plain ; echo"
